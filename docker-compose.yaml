services:
  db:
    build:
      context: db
      dockerfile: Dockerfile
    container_name: ${PG_CONTAINER_NAME}
#    env_file:
#      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: '${POSTGRES_HOST}'
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db"]
      interval: 5s
      timeout: 5s
      retries: 5
#    restart: unless-stopped
  backend:
    container_name: backend
#    env_file:
#      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    restart: always
#    volumes:
#      - ".:/app"
    command: 
      ["/app/main"]
    depends_on:
      db:
        condition: service_healthy
  frontend:
    container_name: "frontend"
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - 80:80
    depends_on:
      - backend
    